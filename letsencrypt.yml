---
  # This playbook should work for servers, that aren´t accessable from the internet (like our local Vagrant setup here)
  # Be sure to use a real/purchased domain!

  - name: Firstofall we´ll check, if we already generated some certificates
    find:
      paths: "/srv/dehydrated/certs/{{ gitlab_domain }}"
    register: files_in_dehydrated_cert_folder

  - set_fact:
      certs_folder_empty: files_in_dehydrated_cert_folder.matched == "0"

  - name: No certs present in /srv/dehydrated/certs/
    debug:
      msg: "There are no certs present in /srv/dehydrated/certs/ (files in this dir: {{ files_in_dehydrated_cert_folder.files }}), we need to obtain new ones"
    when: certs_folder_empty

  - name: Obtain new Let´s Encrypt certificates for our internally-only accessable VagrantBox
    include_tasks: obtain-letsencrypt-certs-dehydrated-lexicon.yml
    when: certs_folder_empty

  - name: Create Gitlab cert import folder /etc/gitlab/trusted-certs for later Gitlab Installation usage
    file:
      path: /etc/gitlab/trusted-certs
      state: directory

  - name: Copy certificate files to Gitlab cert import folder /etc/gitlab/trusted-certs (see https://docs.gitlab.com/omnibus/settings/ssl.html#details-on-how-gitlab-and-ssl-work)
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      remote_src: yes
    with_items:
      - src: "/srv/dehydrated/certs/{{ gitlab_domain }}/cert.pem"
        dest: "/etc/gitlab/trusted-certs/cert.pem"

      - src: "/srv/dehydrated/certs/{{ gitlab_domain }}/chain.pem"
        dest: "/etc/gitlab/trusted-certs/chain.pem"

      - src: "/srv/dehydrated/certs/{{ gitlab_domain }}/fullchain.pem"
        dest: "/etc/gitlab/trusted-certs/fullchain.pem"

      - src: "/srv/dehydrated/certs/{{ gitlab_domain }}/privkey.pem"
        dest: "/etc/gitlab/trusted-certs/privkey.pem"